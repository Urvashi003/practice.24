//gfg pblm of the day!!!


class Solution{
  public:
    // your task is to complete this function
    int countPairs(struct Node* head1, struct Node* head2, int x) {
        unordered_set<int> fast;
        Node* temp = head1;
        while(temp)
        {
            int val = temp->data;
            fast.insert(val);
            temp = temp->next;
        }
        int cnt = 0;
        temp = head2;
        while(temp)
        {
            int val = temp->data;
            if(fast.find(x-val) !=fast.end())
            {
                cnt++;
            }
            temp=temp->next;
        }
        
        return cnt;
        
    }
};


//leetcode POTD

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        vector<vector<int>>ans;

    for(auto interval : intervals)
    {
       if(interval[1]< newInterval[0])
       {
           ans.push_back(interval);
       } 
       else if(interval[0]>newInterval[1])
       {
           ans.push_back(newInterval);
           newInterval = interval;
       }
       else
       {
           newInterval[0] = min(newInterval[0],interval[0]);
           newInterval[1] = max(newInterval[1],interval[1]);
       }
    }

    ans.push_back(newInterval);
    return ans;
    }
};